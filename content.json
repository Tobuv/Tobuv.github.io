{"meta":{"title":"Tobuv's blog","subtitle":"","description":"","author":"Tobuv","url":"https://Tobuv.github.io","root":"/"},"pages":[{"title":"404 Not Found","date":"2020-02-10T09:18:27.445Z","updated":"2020-02-10T09:18:27.445Z","comments":true,"path":"404.html","permalink":"https://tobuv.github.io/404.html","excerpt":"","text":"404 Not Found **很抱歉，您访问的页面不存在** 可能是输入地址有误或该地址已被删除"},{"title":"关于","date":"2020-02-10T13:17:59.787Z","updated":"2020-02-10T13:17:59.787Z","comments":true,"path":"about/index.html","permalink":"https://tobuv.github.io/about/index.html","excerpt":"","text":"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 本博客基于hexo+github部署而成，主题使用material-x 关于主题本站主题是：Material X One More Thing懒加载占位图如果喜欢请拿去：图片链接 欢迎灌水 https://www.bilibili.com/video/av69328247"},{"title":"blog","date":"2020-02-10T09:00:41.000Z","updated":"2020-02-10T09:00:41.292Z","comments":true,"path":"blog/index.html","permalink":"https://tobuv.github.io/blog/index.html","excerpt":"","text":""},{"title":"我的朋友们","date":"2020-02-14T11:53:56.670Z","updated":"2020-02-14T11:53:56.670Z","comments":true,"path":"friends/index.html","permalink":"https://tobuv.github.io/friends/index.html","excerpt":"","text":"各位大佬想交换友链的话可以在下方留言，必须要有名称、头像链接、和至少一个标签哦～ 名称： Tobuv’s blog头像： assets/person.png网址： https://tobuv.github.io标签： xxx"},{"title":"","date":"2020-02-10T09:16:46.103Z","updated":"2020-02-10T09:16:46.103Z","comments":true,"path":"projects/index.html","permalink":"https://tobuv.github.io/projects/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2020-02-10T09:08:46.765Z","updated":"2020-02-10T09:08:46.765Z","comments":true,"path":"blog/categories/index.html","permalink":"https://tobuv.github.io/blog/categories/index.html","excerpt":"","text":""},{"title":"archives","date":"2020-02-10T13:53:47.000Z","updated":"2020-02-10T13:57:39.488Z","comments":true,"path":"blog/archives/index.html","permalink":"https://tobuv.github.io/blog/archives/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-02-10T09:09:12.353Z","updated":"2020-02-10T09:09:12.353Z","comments":true,"path":"blog/tags/index.html","permalink":"https://tobuv.github.io/blog/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"排序算法","slug":"排序算法","date":"2019-02-10T16:00:00.000Z","updated":"2020-02-11T06:40:03.324Z","comments":true,"path":"2019/02/11/排序算法/","link":"","permalink":"https://tobuv.github.io/2019/02/11/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/","excerpt":"算法学习","text":"算法学习 @[toc] 排序综合直接插入排序123456789101112/*插入排序*/void insert_sort(int arr[], int length)&#123; int i, j; for (i = 1; i &lt; length; i++) &#123; int tem = arr[i]; for (j = i; j &gt; 0 &amp;&amp; arr[j - 1] &gt; tem; j--) arr[j] = arr[j - 1]; arr[j] = tem; &#125;&#125; 希尔排序（插入排序改进）123456789101112131415/*希尔排序（插入排序升级）*/void shell_sort(int arr[],int length)&#123; int i, j, k; for (k = length / 2; k &gt; 0; k /= 2) &#123; for (i = k; i &lt; length; i++) &#123; int tem = arr[i]; for (j = i; j &gt; 0 &amp;&amp; arr[j - k] &gt; tem; j -= k) arr[j] = arr[j - k]; arr[j] = tem; &#125; &#125;&#125; 冒泡排序1234567891011121314151617/*冒泡排序*/void bubble_sort(int arr[], int length)&#123; int i, j; for (i = 0; i &lt; length - 1; i++) &#123; for (j = 0; j &lt; length - 1 - i; j++) &#123; if (arr[j] &gt; arr[j + 1]) &#123; int tem = arr[j + 1]; arr[j + 1] = arr[j]; arr[j] = tem; &#125; &#125; &#125;&#125; 快速排序（冒泡排序升级）123456789101112131415161718192021void quick_sort(int arr[],int left,int right)&#123; if (left &gt;= right) return; int i, j, k; i = left; j = right; k = arr[left]; while (i &lt; j) &#123; while (i &lt; j &amp;&amp; arr[j] &gt;= k) j--; arr[i] = arr[j]; while (i &lt; j &amp;&amp; arr[i] &lt;= k) i++; arr[j] = arr[i]; &#125; arr[i] = k; quick_sort(arr, left, i - 1); quick_sort(arr, i+1, right);&#125; 归并排序1234567891011121314151617181920212223242526272829303132333435363738394041void mergearray(int arr[], int left, int mid, int right, int temp[])//合并数组&#123; int i, j, k; i = left; j = mid+1; k = 0; while (i &lt;= mid &amp;&amp; j &lt;= right)//mid左右数组a[i]~a[mid],a[j]~a[right]都未遍历完 if (arr[i] &lt; arr[j]) temp[k++] = arr[i++]; else temp[k++] = arr[j++]; while (i &lt;= mid) //a[j]~a[right]已遍历完 &#123; temp[k++] = arr[i++]; &#125; while (j &lt;= right) //a[i]~a[mid]已遍历完 &#123; temp[k++] = arr[j++]; &#125; for (int i = 0; i &lt; k; i++) //temp数组传给原数组 arr[left+i] = temp[i];&#125;void mergesort(int arr[], int left, int right,int temp[])&#123; if (left &lt; right) &#123; int mid = (left + right) / 2; mergesort(arr, left, mid, temp); mergesort(arr, mid + 1, right, temp); mergearray(arr, left, mid, right, temp); &#125;&#125;bool merge_sort(int arr[],int n)&#123; int* p = (int*)malloc(n * sizeof(int)); if (!p) return false; mergesort(arr, 0, n - 1, p); free(p); return true;&#125;","categories":[{"name":"算法","slug":"算法","permalink":"https://tobuv.github.io/blog/categories/%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"c/c++","slug":"c-c","permalink":"https://tobuv.github.io/blog/tags/c-c/"}],"author":{"name":"Tobuv","avatar":"assets/person.png","url":"https://tobuv.github.io"}}]}